[general]
#目前iOS设备上的流量有两种方式传递给Loon，分别是HTTP Proxy和TUN（可以简单理解为虚拟网卡），bypass-tun则和TUN有关，如果配置了该参数，那么所配置的这些IP段、域名就会不交给Loon来处理，系统直接处理
bypass-tun = 192.168.0.0/16,localhost,*.local,::1/128,fe80::/10,10.0.0.0/8,127.0.0.0/8,192.0.0.0/24,255.255.255.255/32
#和上面类似，skip-proxy则和HTTP Proxy有关，如果配置了该参数，那么所配置的这些IP段、域名将不会转发到Loon，而是由系统处理
skip-proxy = 192.168.0.0/16,127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,localhost,*.local
#udp类的dns服务器，用,隔开多个服务器，system表示系统dns
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5,8.8.8.8
#DNS over HTTPS服务器，用,隔开多个服务器
doh-server = https://223.5.5.5/dns-query,https://223.6.6.6/dns-query
#DNS over HTTPS服务器，用,隔开多个服务器
doh3-server = h3://223.5.5.5/dns-query,h3://223.6.6.6/dns-query
#ipv4-only: 只使用 IPv4 进行请求，不发起 AAAA 的 DNS 查询，拒绝所有 IPv6 连接
#dual: 并发发起 A 和 AAAA 的 DNS 查询，优先使用响应速度更快的结果，不判断是否是IPv4或者IPv6
#ipv4-preferred: 并发发起 A 和 AAAA 的 DNS 查询，优先使用 IPv6 结果，如无 IPv6 记录则切换到 IPv4 结果
#ipv6-Preferred: 并发发起 A 和 AAAA 的 DNS 查询，优先使用 IPv4 结果，如无 IPv4 记录则切换到 IPv6 结果
ip-mode = dual
#是否开启局域网代理访问
allow-wifi-access = true
#开启局域网访问后的http代理端口
wifi-access-http-port = 8899
#开启局域网访问后的socks5代理端口
wifi-access-socks5-port = 8898
#测速所用的测试链接，如果策略组没有自定义测试链接就会使用这里配置的
proxy-test-url = http://cp.cloudflare.com/generate_204
#检测网络可用性时的链接，一般填写可以直连访问的链接
internet-test-url = http://connect.rom.miui.com/generate_204
#节点测速时的超时秒数
test-timeout = 5
#一个节点连接失败几次后会进行节点切换，默认3次
switch-node-after-failure-times = 2
#订阅资源解析器链接，推荐Peng大的sub-store订阅节点解析器
resource-parser = https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store-parser.loon.min.js
#当切换到某一特定的WiFi下时改变Loon的流量模式，如"loon-wifi5g":DIRECT，表示在loon-wifi5g这个wifi网络下使用直连模式，"cellular":PROXY，表示在蜂窝网络下使用代理模式，"default":RULE，默认使用分流模式
#ssid-trigger = "loon-wifi5g":DIRECT,"cellular":PROXY,"default":RULE
ssid-trigger = "default":RULE
#有些app会自己去请求DNS获取IP，这样导致有些域名类型的规则无法进行匹配，所以Loon是用了FakeIP来解决这个问题，原理是截取这些DNS请求，返回一个假的IP响应，然后在获取到这个假的IP的请求时将相关域名映射到请求中；但是有时候系统的一些域名会缓存这些假IP，导致关闭Loon后会用这个假的IP直接发起请求，这就会导致一些问题，针对这种情况可以配置real-ip来使这些域名返回真实的ip
real-ip = *.apple.com,*.icloud.com
#Auto: 系统自动分配
#Cellular: 在WiFi和蜂窝数据都开启的情况下指定使用蜂窝网络
#Performace: 在WiFi和蜂窝数据都开启的情况下使用最优的网络接口
#Balance: 在WiFi和蜂窝数据都开启的情况下，均衡使用网络接口
interface-mode = Auto
#自定义geoip数据库的下载地址
geoip-url = https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb
#自定义asn数据库的下载地址
ipasn-url = https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb
#当UDP的流量规则匹配到相关节点，但该节点不支持UDP或未未开启UDP转发时使用的策略，可选DIRECT、REJECT
udp-fallback-mode = REJECT
#域名拒绝规则执行的阶段
#DNS：使用 LoopbackIP、No Answer 或 NXDomain 的方式阻止 DNS 查询以达到拦截请求的目的
#Request：在请求转发阶段拦截请求
#⚠️ 在 HTTP Proxy & TUN 模式下由于拦截到的系统 DNS 较少，大部分的拦截都会在转发请求阶段进行。
domain-reject-mode = DNS
#在DNS阶段拒绝域名时采用的方式
#LOOPBACKIP：回环IP
#NOANSWER：DNS响应为空
#NXDOMAIN：错误码为3的DNS响应
dns-reject-mode = LOOPBACKIP
[Proxy Group]
Telegram = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
YouTube = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
YouTubeMusic = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube_Music.png
TikTok = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png
Twitter = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png
Facebook = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png
Spotify = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
Netflix = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png
Instagram = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Instagram.png
Paypal = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PayPal.png
OpenAI = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AI.png
Amazon = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Amazon.png
Talkatone = select, 美国节点, DIRECT, img-url = https://raw.githubusercontent.com/Sliverkiss/QuantumultX/main/icon/talkatone.png
China = select, DIRECT, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png
Global = select, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
# 地区策略
香港 = select, 香港节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
台湾 = select, 台湾节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
日本 = select, 日本节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
韩国 = select, 韩国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
新加坡 = select, 新加坡节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
美国 = select, 美国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
英国 = select, 英国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_Kingdom.png
法国 = select, 法国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/France.png
德国 = select, 德国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Germany.png
加拿大 = select, 加拿大节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Canada.png
俄罗斯 = select, 俄罗斯节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Russia.png
澳大利亚 = select, 澳大利亚节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Australia.png
全球 = select, DIRECT, 全球节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png
Finally = select, DIRECT, 全球, 澳大利亚, 俄罗斯, 加拿大, 德国, 法国, 英国, 美国, 新加坡, 韩国, 日本, 台湾, 香港, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
# 自动策略
香港优选 = url-test, 香港节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
台湾优选 = url-test, 台湾节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
日本优选 = url-test, 日本节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
韩国优选 = url-test, 韩国节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
新加坡优选 = url-test, 新加坡节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
美国优选 = url-test, 美国节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
英国优选 = url-test, 英国节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_Kingdom.png
法国优选 = url-test, 法国节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/France.png
德国优选 = url-test, 德国节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Germany.png
加拿大优选 = url-test, 加拿大节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Canada.png
俄罗斯优选 = url-test, 俄罗斯节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Russia.png
澳大利亚优选 = url-test, 澳大利亚节点, interval = 900, tolerance = 100, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Australia.png
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# 根据自己机场及想用的节点进行删改，如想过滤 “香港 IPLC”，请修改 FilterKey 为 “.*香港 IPLC”
[Remote Filter]
香港节点 = NameRegex, FilterKey = "^(?=.*(香港|港|HK|(?i)HongKong))"
台湾节点 = NameRegex, FilterKey = "^(?=.*(台湾|台|TW|(?i)Taiwan))"
日本节点 = NameRegex, FilterKey = "^(?=.*(日本|日|JP|(?i)Japan))"
韩国节点 = NameRegex, FilterKey = "^(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))"
新加坡节点 = NameRegex, FilterKey = "^(?=.*(新加坡|新|狮城|SG|(?i)Singapore))"
美国节点 = NameRegex, FilterKey = "^(?=.*(美国|美|US|(?i)States|American))"
英国节点 = NameRegex, FilterKey = "^(?=.*(英国|英|UK|(?i)Kingdom))"
法国节点 = NameRegex, FilterKey = "^(?=.*(法国|法|FR|(?i)France))"
德国节点 = NameRegex, FilterKey = "^(?=.*(德国|德|DE|(?i)Germany))"
加拿大节点 = NameRegex, FilterKey = "^(?=.*(加拿大|CA|(?i)Canada))"
俄罗斯节点 = NameRegex, FilterKey = "^(?=.*(俄罗斯|俄|RU|(?i)Russia))"
澳大利亚节点 = NameRegex, FilterKey = "^(?=.*(澳大利亚|澳|AU|(?i)Australia))"
全球节点 = NameRegex, FilterKey = "^((?!(加群|套餐|重置|分享|网址|邀请|公众|消息|账号|邮箱|联系|时间|频道|Unbolck)).)*$"
[Plugin]
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/plugin/loon/talkatone/talkatone.plugin, enabled=true
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/plugin/loon/youku/youku_adblock.plugin, enabled=true
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/plugin/loon/qidian/qidian_adblock.plugin, enabled=true
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/plugin/loon/qidian/qidian_task.plugin, enabled=true
[Script]
[Remote Script]
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/script/loon/qidian/qidian.conf, tag=起点, enabled=true
[Rule]
GEOIP,CN,DIRECT
FINAL,Finally
[Remote Rule]
# 去广告分流规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Advertising/Advertising.list, policy=REJECT, tag=Advertising, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Hijacking/Hijacking.list, policy=REJECT, tag=Hijacking, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy.list, policy=REJECT, tag=Privacy, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BlockHttpDNS/BlockHttpDNS.list, policy=REJECT, tag=BlockHttpDNS, enabled=true
# 苹果
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=DIRECT, tag=Apple, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple_Domain.list, policy=DIRECT, tag=AppleDomain, enabled=true
# 应用分流规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=YouTube, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTubeMusic/YouTubeMusic.list, policy=YouTubeMusic, tag=YouTubeMusic, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, policy=TikTok, tag=TikTok, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Twitter/Twitter.list, policy=Twitter, tag=Twitter, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Facebook/Facebook.list, policy=Facebook, tag=Facebook, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, policy=Netflix, tag=Netflix, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Instagram/Instagram.list, policy=Instagram, tag=Instagram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/PayPal/PayPal.list, policy=PayPal, tag=PayPal, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/OpenAI/OpenAI.list, policy=OpenAI, tag=OpenAI, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Amazon/Amazon.list, policy=Amazon, tag=Amazon, enabled=true
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/rule/loon/talkatone/talkatone_direct.list, policy=DIRECT, tag=TalkatoneDirect, enabled=true
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/rule/loon/talkatone/talkatone.list, policy=Talkatone, tag=Talkatone, enabled=true
https://raw.githubusercontent.com/kleinmoretti-xu/proxy_sources/refs/heads/main/rule/loon/xiaoshuo/xiaoshuo.list, policy=Global, tag=Read, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, policy=China, tag=China, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China_Domain.list, policy=China, tag=ChinaDomain, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global.list, policy=Global, tag=Global, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global_Domain.list, policy=Global, tag=GlobalDomain, enabled=true
